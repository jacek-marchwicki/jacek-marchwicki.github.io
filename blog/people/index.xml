<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developer Blog - Jacek Marchwicki – People Related Articles</title>
    <link>/blog/people/</link>
    <description>Recent content in People Related Articles on Developer Blog - Jacek Marchwicki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/blog/people/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: How to introduce yourself to a new team</title>
      <link>/blog/how-to-introduce-yourself-to-a-new-team/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/how-to-introduce-yourself-to-a-new-team/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/blog/how-to-introduce-yourself-to-a-new-team/featured-title_hu0203e03345a1a499aeaec6c5972499b7_7805487_640x0_resize_q75_catmullrom.jpg" width="640" height="960"/>]]>
        
        &lt;h1 id=&#34;why&#34;&gt;Why?&lt;/h1&gt;
&lt;p&gt;It is important to note that people who you meet during the hiring process make only a fraction of employees you’re going to work with. This is why the first impression you make after joining the team is almost as crucial as the recruitment process. Even if you aren’t a very experienced developer, it is important to have a good starting point joining your new team. I&amp;rsquo;d like to share my findings that you might find helpful. Keep in mind that all these tips can also be applied when you switch teams within the company or meet people joining your team.&lt;/p&gt;
&lt;h1 id=&#34;importance-of-the-first-impression&#34;&gt;Importance of the first impression&lt;/h1&gt;
&lt;p&gt;At the starting point (joining the team) you have a very low number of trust points. People don’t know you, so all you can do is tell them how good you are. But before I’ll explain how to do this most effectively, I have to warn you: please be careful and don’t overshoot the mark. If you say that you are better than you really are, they are going to find you out very soon and it certainly won’t be pretty.
The following non-scientific chart shows how trust to you changes over time after you join the team.&lt;/p&gt;







&lt;div class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 495px&#34;&gt;
	&lt;img class=&#34;card-img-top&#34; src=&#34;/blog/how-to-introduce-yourself-to-a-new-team/chart_hu09c7e40e0b91c82b668107dc2eb1998b_39579_600x300_fit_catmullrom_2.png&#34; width=&#34;485&#34; height=&#34;300&#34; alt=&#34;Chart representing how trust changes over time&#34;&gt;
	
	&lt;div class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;
		&lt;p class=&#34;card-text&#34;&gt;Chart representing how trust changes over time&lt;/p&gt;
	&lt;/div&gt;
	
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Yellow line - If you introduce yourself as better than you are (telling lies), the team will quickly realize that you have tricked them. They will lose trust they had in you in the beginning. And it will require a huge effort to regain it.&lt;/li&gt;
&lt;li&gt;Blue line - If you don’t introduce yourself correctly, you will gain trust, but it’ll take a lot of time and energy to prove your value.&lt;/li&gt;
&lt;li&gt;Red line - To gain as much trust as possible, you need to make a proper introduction. It will provide you with a certain level of trust at the outset, which you will be able to increase over time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-to-introduce-yourself&#34;&gt;How to introduce yourself?&lt;/h1&gt;
&lt;p&gt;Usually, when you’re being introduced to the team, you are asked to say a few words about yourself. If you are a person who doesn’t like public speaking, you can leverage a moment when you’re joining a chat channel to send a simple ‘hello’ message to everyone. The best thing would be to use both opportunities. I’d say that the first time you meet your new colleagues is the final stage of the interview process. Make the best of it.&lt;/p&gt;
&lt;h1 id=&#34;what-can-you-say-about-yourself&#34;&gt;What can you say about yourself?&lt;/h1&gt;
&lt;p&gt;It’s important to take some time and prepare your “Hello World” message.
You should think about what you would like to know about a person joining your team. Then just add these ideas to your ‘hello’ message. I’ll give you a few suggestions, but only you know which of these suit your team, your personality and your expertise.&lt;/p&gt;
&lt;h1 id=&#34;being-a-gentleman-or-a-lady&#34;&gt;Being a gentleman (or a lady)&lt;/h1&gt;
&lt;p&gt;But before talking about yourself, a gentleman would say something nice about his interlocutor. You might not know too much about your team, but you should always find something. You might already know the product that you’re going to develop - then you can say something nice about this product. During the recruitment process, your manager might have mentioned something valuable about your team - you can rephrase their words. Of course you can Google, too. If you’re invited to a chat channel, you can look through history to find something interesting. You might be already invited to GIT, Jira, designs etc. In the worst case scenario you can just use some generic slogan.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;“Hi guys! I&amp;rsquo;m happy to work with you. I hope to learn a lot from you.”&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;“Hi guys! Your manager said very nice things about you and about the quality of the product that you’re creating! I wouldn’t take them at their words, but seeing the quality of conversations that you have on Slack, I’m more than delighted to join your team.”&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;“Hi! I’m very pleased that I can join you guys, the product you’re creating is awesome!”&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;the-team-comes-first-you-come-second&#34;&gt;The team comes first, you come second&lt;/h1&gt;
&lt;p&gt;Don’t say what you’d like to say, say what the team would like to hear. Instead of just listing the items of your professional experience, you should say why it might be useful for the team.
If you only say how good you are, people will think that you have a big ego and will consider you a risk to their social group. If you offer help, people will think that you’re a kind of person who supports their social group.
Show that you’re willing to help.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don’t say: &lt;em&gt;“I have huge experience with analytics”&lt;/em&gt;&lt;br&gt;
Better: &lt;em&gt;“If you have any problems related to analytics, I already have some experience in that field”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t say: &lt;em&gt;“I know Python, Dart, PHP”&lt;/em&gt;, knowing that you’ll be writing Java software&lt;br&gt;
Better: &lt;em&gt;“I can help you write useful dev-tools because I’ve developed apps in Python, Dart and PHP”&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Say: &lt;em&gt;“I’m always eager to help others, answer questions and do code-review.”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;never-complain-about-the-team&#34;&gt;Never complain about the team&lt;/h1&gt;
&lt;p&gt;Never ever suggest that the team that you’ve joined did something wrong. You weren’t with the team when they made their decisions so you are not the one to judge them.
You wouldn’t want to be judged by someone who has just joined the team and knows nothing about your app complexity, would you? Even if the team know all too well that they did something wrong, they don’t want you to point this to them. Also, it’s risky to say something bad about your “previous” team, as one of your teammates might have been that team&amp;rsquo;s member in the past.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don’t say: &lt;em&gt;“This is spaghetti architecture. I’d like to improve it with the following changes: &amp;hellip;”&lt;/em&gt;&lt;br&gt;
Better: &lt;em&gt;“I’ve been involved in updating different apps’ architecture before. If such a thing is planned for our team, I‘d be more than willing to help”&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t say: &lt;em&gt;“As an expert, I was employed to help you get rid of tons of bugs that you’ve made”&lt;/em&gt;&lt;br&gt;
Better: &lt;em&gt;“I’ve been employed to help you guys improve app stability, and I’m willing to do my job. But it won’t be easy because your app stability is much better than in the case of apps that I’ve been improving so far ;)”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;dont-be-too-modest&#34;&gt;Don’t be too modest&lt;/h1&gt;
&lt;p&gt;First, don’t lie about yourself (sorry for the constant reminding), but don’t be too modest - others also want to know where your strengths lie so that the team can assign some responsibilities to you and take some burden off their shoulders. Don’t pretend that you know everything. You can also point to some of your weaker sides in which the team can help you.
It’s always better to focus on facts rather than your opinions.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;“I’d like to start taking over some of your tasks as soon as possible and to make this happen, I&amp;rsquo;d like to share with you a few things about me: I have 8 years of commercial experience developing Android applications. I had to set app architectures, implement analytics tracking, end-to-end testing frameworks, CI/CD&amp;hellip; and REST, but I have never had to use GraphQL which I need to learn.”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;“I have never used Nozbe before, but I have extensive experience in working with SCRUM methodology and different tools like Jira, Asana and ClickUp, which I have been using to improve my previous teams’ performance. I’d be more than willing to use this knowledge after I get used to the Nozbe software.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t say: &lt;em&gt;“I’m an experienced developer.”&lt;/em&gt;&lt;br&gt;
Better: &lt;em&gt;“I have 12 years of commercial experience.”&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;show-that-you-are-a-human-not-a-machine&#34;&gt;Show that you are a human, not a machine&lt;/h1&gt;
&lt;p&gt;Add some empathy to your message: try smiling when talking or add some emojis to your message. Say something not obvious about yourself. Of course you need to consider how your message will be received but don’t worry too much about style unless you’re a copywriter :)&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;“I’m not the best climber, but if there is someone who would like to start climbing, I’m ready to share my passion for rope.”&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;“I’m a no-lifer so in my free time I read a lot of books, mainly about teamwork. So if you know such books that are worth recommending, please do so. But because I have kids, it’s better if they are audiobooks ;)”&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tldr&#34;&gt;TL;DR;&lt;/h1&gt;
&lt;p&gt;This is an example of a message that you can use to say ‘hello’ to your new colleagues.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi guys! Your manager said very nice things about you and about the quality of the product that you’re creating! I wouldn’t take them at their words, but seeing the quality of the conversations that you have on Slack, I’m more than delighted to join the team.&lt;/p&gt;
&lt;p&gt;While developing in the previous team, I’ve gained pretty extensive knowledge about server endpoints, app behavior, and about how other teams work in our company and I’d be happy to share this knowledge with you. We’ve changed a buggy app received from an external team to something that works pretty well, even though we would receive a huge number of 500 server errors from backend systems. I know that you’re facing the same server stability issues. I would like to work with you guys to get even better quality for the new app!&lt;/p&gt;
&lt;p&gt;I’d like to start taking some of your tasks over as soon as possible and, to make this happen, I’d like to share with you a few things about me: I have 8 years of commercial experience developing Android applications. I had to set app architectures, implement analytics tracking, end-to-end testing frameworks, CI/CD, video calls, chats and REST, of course, but I have never had an opportunity to use GraphQL, which I need to learn.
I have never used Nozbe before, but I have extensive experience in working with SCRUM methodology and different tools like Jira, Asana and ClickUp, which I washave been using to improve my previous teams’ performance. I’d be more than willing to use this knowledge after I get used to the Nozbe software.&lt;/p&gt;
&lt;p&gt;I’m a no-lifer so in my free time I read a lot of books, mainly about teamwork. So if you know such books that are worth recommending, please do so. But because I have kids, it&amp;rsquo;s better if they are audiobooks ;)
Btw. If you hear rumors that I have developed apps in PHP, please, don’t bully me, my psychiatrist says it’s not good for my mental health ;)&lt;/p&gt;
&lt;p&gt;Thanks @Arnold, @Bernadette, @Frank and @Josh for your warm welcome&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;final-words&#34;&gt;Final words&lt;/h1&gt;
&lt;p&gt;One final trick. If you can ask someone to say something about you. It is always better if others talk about you than if you talk about yourself. I.e. Your recruiter can introduce you to the team by saying, “Jacek has 12 years of experience in the field and he’s passed all of our coding tests with great results”. You can always ask for such an introduction.&lt;/p&gt;
&lt;p&gt;Btw. Don’t you trust me more now, after you’ve read all these true examples about me?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published at &lt;a href=&#34;https://www.appunite.com/blog/how-to-introduce-yourself-to-new-team&#34;&gt;https://www.appunite.com/blog/how-to-introduce-yourself-to-new-team&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: My Story@Appunite</title>
      <link>/blog/my-storyappunite/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/my-storyappunite/</guid>
      <description>
        
        
        
        <![CDATA[<img src="/blog/my-storyappunite/featured-title_hu7ed633ecbc6f3836647882676bf782ff_4857484_640x0_resize_q75_catmullrom.jpg" width="640" height="320"/>]]>
        
        &lt;p&gt;Our client was so content with our iOS development that he asked Karol (CEO and one of AppUnite’s co-founders) to develop the same app for Android. Karol refused because AppUnite hadn’t had experience developing Android apps. Actually, 2 years before I’d worked with Android and by then was completely besotted by it. But experience and love didn’t mean “production-ready”. This didn’t discourage the client, he knew that we are good developers and we have good project management strategies so he insisted. Karol refused, explaining to the client the risk of not delivering good quality product because of developing an app for the new platform. The client knew that in his iOS app, we had implemented features that hadn’t been on the market at the time, so he knew that the risk was smaller than looking for other company. Karol asked me if I want to start developing the same app for Android. I said in Polish “kto nie ryzykuje, ten nie pije szampana” (this Polish proverb means, in free translation: who doesn’t risk, doesn’t drink champagne). Karol talked to the client and ensured that he was willing to take the risk.&lt;/p&gt;
&lt;p&gt;The client was sure.&lt;/p&gt;
&lt;p&gt;Our friendly designer read Android Design Guidelines and with my help adjusted the designs.. They were approved. The schedule was set and development of app has started.&lt;br&gt;
Keep in mind that these were ancient times for Android (minimal supported Android version: 1.5, newest Android version was 3.0).&lt;/p&gt;
&lt;p&gt;We had to face many problems.&lt;/p&gt;
&lt;p&gt;There was no good library for fetching images from the Internet that met our speed standards (yes, there were no Picasso or Glide libraries). I needed a whole week only to present images to users.&lt;br&gt;
At the time, we had a stunning iOS library (called AUKit) for fetching data from the network, caching them and displaying them to a user. There was no such library for Android. We had to implement our own.&lt;br&gt;
And the real disaster… The app’s main feature was sharing video content. Sharing videos between Android devices, and iOS devices was no problem — the issue was to share content between iOS and Android. Today, it’s a common practice to use a server as a converter for different video formats between iOS and Android. But our client need was to use serverless solution.&lt;br&gt;
We needed FFmpeg library to convert video files on the device. The problem was that FFmpeg library wasn’t yet adjusted to compile for Android. We had to do it. Then, we needed to create a wrapper between C language in which FFmpeg is written, and Java in which the app was written. And of course, these weren’t times when you could just type a question into Google and find a solution. These were times when you had to read Android Operating System source code to find tips. This caused delays, but we managed nonetheless..&lt;/p&gt;
&lt;p&gt;We did this!&lt;/p&gt;
&lt;p&gt;And the best part was that development and tests were overdue only by a week. The customer was satisfied and we were even more.&lt;/p&gt;
&lt;p&gt;I think this is a problem of many software houses — they don’t want to risk.&lt;/p&gt;
&lt;p&gt;If you want to implement great software, you need to use better and better technology, you need to take a risk. Albert Einstein said, “Insanity is doing the same thing over and over again and expecting different results”.&lt;/p&gt;
&lt;p&gt;In these 7 years, light years in computer science, so many new
developers joined AppUnite but I’m convinced that we’re still the same
company, the company that still wants to use new technology, the company
that still wants to ensure that the client’s aware of the risk.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
